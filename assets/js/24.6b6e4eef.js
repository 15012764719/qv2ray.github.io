(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{273:function(t,a,v){"use strict";v.r(a);var s=v(17),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"让你的软件或浏览器走-qv2ray-提供的代理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#让你的软件或浏览器走-qv2ray-提供的代理"}},[t._v("#")]),t._v(" 让你的软件或浏览器走 Qv2ray 提供的代理")]),t._v(" "),v("p",[t._v("不同平台的代理配置方式不同。")]),t._v(" "),v("h2",{attrs:{id:"_1-linux"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-linux"}},[t._v("#")]),t._v(" 1. Linux")]),t._v(" "),v("h3",{attrs:{id:"让本机应用使用代理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#让本机应用使用代理"}},[t._v("#")]),t._v(" 让本机应用使用代理")]),t._v(" "),v("h4",{attrs:{id:"方法一：环境变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法一：环境变量"}},[t._v("#")]),t._v(" 方法一：环境变量")]),t._v(" "),v("p",[t._v("在 Linux 下，有（相当一部分）应用程序（如 curl, wget 等）会遵循形如“协议_proxy”的环境变量所设置的代理。例如：")]),t._v(" "),v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("http_proxy")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:8000"')]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将地址和端口换成Qv2ray中配置的http入站对应的地址和端口")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("https_proxy")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:8000"')]),t._v("\n")])])]),v("p",[t._v("即可让这些程序使用 Qv2ray 的 http 入站代理。")]),t._v(" "),v("p",[t._v("如果 Qv2ray 的 http 入站代理启用了身份验证，则相应的环境变量应设为：")]),t._v(" "),v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("http_proxy")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://user:pass@127.0.0.1:8000"')]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("https_proxy")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://user:pass@127.0.0.1:8000"')]),t._v("\n")])])]),v("p",[t._v("如果身份验证的用户和密码中有特殊字符，则需要对其进行转义，可参考下表：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("code",[t._v("!")])]),t._v(" "),v("th",[v("code",[t._v("#")])]),t._v(" "),v("th",[v("code",[t._v("$")])]),t._v(" "),v("th",[v("code",[t._v("&")])]),t._v(" "),v("th",[v("code",[t._v("'")])]),t._v(" "),v("th",[v("code",[t._v("(")])]),t._v(" "),v("th",[v("code",[t._v(")")])]),t._v(" "),v("th",[v("code",[t._v("*")])]),t._v(" "),v("th",[v("code",[t._v("+")])]),t._v(" "),v("th",[v("code",[t._v(",")])]),t._v(" "),v("th",[v("code",[t._v("/")])]),t._v(" "),v("th",[v("code",[t._v(":")])]),t._v(" "),v("th",[v("code",[t._v(";")])]),t._v(" "),v("th",[v("code",[t._v("=")])]),t._v(" "),v("th",[v("code",[t._v("?")])]),t._v(" "),v("th",[v("code",[t._v("@")])]),t._v(" "),v("th",[v("code",[t._v("[")])]),t._v(" "),v("th",[v("code",[t._v("]")])])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v("%21")])]),t._v(" "),v("td",[v("code",[t._v("%23")])]),t._v(" "),v("td",[v("code",[t._v("%24")])]),t._v(" "),v("td",[v("code",[t._v("%26")])]),t._v(" "),v("td",[v("code",[t._v("%27")])]),t._v(" "),v("td",[v("code",[t._v("%28")])]),t._v(" "),v("td",[v("code",[t._v("%29")])]),t._v(" "),v("td",[v("code",[t._v("%2A")])]),t._v(" "),v("td",[v("code",[t._v("%2B")])]),t._v(" "),v("td",[v("code",[t._v("%2C")])]),t._v(" "),v("td",[v("code",[t._v("%2F")])]),t._v(" "),v("td",[v("code",[t._v("%3A")])]),t._v(" "),v("td",[v("code",[t._v("%3B")])]),t._v(" "),v("td",[v("code",[t._v("%3D")])]),t._v(" "),v("td",[v("code",[t._v("%3F")])]),t._v(" "),v("td",[v("code",[t._v("%40")])]),t._v(" "),v("td",[v("code",[t._v("%5B")])]),t._v(" "),v("td",[v("code",[t._v("%5D")])])])])]),t._v(" "),v("p",[t._v("注：如果需要通过 "),v("code",[t._v("sudo")]),t._v(" 执行的程序也使用这些环境变量，需要让 "),v("code",[t._v("sudo")]),t._v(" 保留这些环境变量，在"),v("code",[t._v("sudoers")]),t._v("配置文件中加上这一行即可：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('Defaults env_keep += "http_proxy https_proxy ftp_proxy"\n')])])]),v("p",[t._v("有些程序使用的是自己定义的环境变量，如 "),v("code",[t._v("rsync")]),t._v(" 需通过 "),v("code",[t._v("RSYNC_PROXY")]),t._v(" 环境变量来使用 http 代理：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("export RSYNC_PROXY=user:pass@127.0.0.1:8000\n")])])]),v("h4",{attrs:{id:"方法二：手动设置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法二：手动设置"}},[t._v("#")]),t._v(" 方法二：手动设置")]),t._v(" "),v("p",[t._v("有些应用支持手动设置代理。以 Firefox 为例：")]),t._v(" "),v("p",[t._v("首选项-常规-网络设置（在最底下）-手动代理配置-把 Qv2ray 的 http 入站代理填到 HTTP/HTTPS/FTP 代理栏里，或把 Qv2ray 的 socks 入站代理填到 SOCKS 代理栏里。")]),t._v(" "),v("p",[t._v("对于浏览器而言，还可以通过插件（如 SwitchyOmega）实现更复杂的代理配置，如进一步分流，临时直连等。")]),t._v(" "),v("p",[t._v("凡是选项里有提供 http 代理设置的应用，如无意外都可以类似配置以使用 Qv2ray 的 http 入站代理。")]),t._v(" "),v("p",[t._v("对 "),v("code",[t._v("java")]),t._v(" 应用，可以通过 java 配置项设置代理，如：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("java -Dhttp.proxyHost=127.0.0.1 -Dhttp.proxyPort=8000 -Dhttps.proxyHost=127.0.0.1 -Dhttps.proxyPort=8000 javacommand\n#or\njava -DsocksProxyHost=127.0.0.1 -DsocksProxyPort=1088 javacommand\n")])])]),v("p",[t._v("对 "),v("code",[t._v("ssh")]),t._v(" 或 "),v("code",[t._v("scp")]),t._v("，可通过 "),v("code",[t._v("socat")]),t._v(" 设置代理，如：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('ssh -o "ProxyCommand=socat - PROXY:localhost:%h:%p,proxyport=8000" user@remotehost\n')])])]),v("p",[t._v("对 "),v("code",[t._v("electron")]),t._v(" 系应用(如 Chrome, Simplenote, Notion 等)，可通过"),v("code",[t._v("--args")]),t._v(" 设置代理，如：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("simplenote --args --proxy-server=127.0.0.1:1081\n")])])]),v("p",[t._v("对 "),v("code",[t._v("git")]),t._v("，可通过 "),v("code",[t._v("config http.proxy")]),t._v(" 设置代理，如：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("git config --global http.proxy http://127.0.0.1:1081\ngit config --global https.proxy http://127.0.0.1:1081\n")])])]),v("p",[t._v("对 "),v("code",[t._v("snap")]),t._v("，可通过 "),v("code",[t._v("set system proxy.http")]),t._v(" 设置代理，如：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('sudo snap set system proxy.http="http://127.0.0.1:1081" \nsudo snap set system proxy.https="http://127.0.0.1:1081" \n')])])]),v("h4",{attrs:{id:"方法三：gnome系统设置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法三：gnome系统设置"}},[t._v("#")]),t._v(" 方法三：GNOME系统设置")]),t._v(" "),v("p",[t._v("目前 Qv2ray 已经支持自动设置 GNOME 系统设置里的系统代理。有些应用（如 Firefox 和 Chromium）会读取并遵循 GNOME 系统设置里的代理配置，对这些应用而言，只需要在 Qv2ray 里启用系统代理即可。")]),t._v(" "),v("h4",{attrs:{id:"方法四：proxychains"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法四：proxychains"}},[t._v("#")]),t._v(" 方法四：proxychains")]),t._v(" "),v("p",[t._v("对于前三种方式无法生效的应用，可尝试使用 proxychains 进行代理，它通过劫持动态链接库 "),v("code",[t._v("libc")]),t._v(" 中的 "),v("code",[t._v("connect")]),t._v(" 等函数实现重定向网络链接到代理中。")]),t._v(" "),v("p",[t._v("首先安装 "),v("code",[t._v("proxychains-ng")]),t._v("：https://github.com/rofl0r/proxychains-ng")]),t._v(" "),v("p",[t._v("随后，编辑 "),v("code",[t._v("/etc/proxychains.conf")]),t._v("（全局）或"),v("code",[t._v("$HOME/.proxychains/proxychains.conf")]),t._v("（用户），将 "),v("code",[t._v("[ProxyList]")]),t._v(" 里的代理改成 Qv2ray 的 socks 或 http 入站代理，如：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("[ProxyList]\nsocks5  127.0.0.1 1088\n#or\n#http  127.0.0.1 8000\n")])])]),v("p",[t._v("在终端里使用 "),v("code",[t._v("proxychains <program>")]),t._v(" 即可让 "),v("code",[t._v("proxychains")]),t._v(" 劫持该应用，以试图让该应用使用代理。")]),t._v(" "),v("p",[t._v("由于 proxychains 的原理是劫持动态链接库 "),v("code",[t._v("libc")]),t._v("，因此它对静态链接的应用（如 "),v("code",[t._v("golang")]),t._v(" 编译的应用）是无效的。")]),t._v(" "),v("h3",{attrs:{id:"让网络上的其他设备使用代理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#让网络上的其他设备使用代理"}},[t._v("#")]),t._v(" 让网络上的其他设备使用代理")]),t._v(" "),v("p",[t._v("默认情况下，Qv2ray 的代理配置是只监听 "),v("code",[t._v("127.0.0.1")]),t._v(" 的地址，即其代理只有本机能够使用，如需让网络上的其他设备使用代理，需要修改这一配置：")]),t._v(" "),v("ul",[v("li",[t._v("若希望局域网（内网 ip 环境）或互联网（公网ip环境）中的所有设备都能够使用本机的Qv2ray提供的代理，则在“首选项-入站设置-监听地址”里，把默认的 "),v("code",[t._v("127.0.0.1")]),t._v(" 改成 "),v("code",[t._v("0.0.0.0")]),t._v(" 即可。")]),t._v(" "),v("li",[t._v("若希望几个具有特定 ip 的设备能够使用本机的 Qv2ray 提供的代理，由于 v2ray 的限制，同一个入站不支持监听多个指定的 ip，可以有两种方式解决这个问题：\n"),v("ul",[v("li",[t._v("通过复杂配置，建立多个不同的入站来实现，每个入站分别监听其中的一个 ip。")]),t._v(" "),v("li",[t._v("Qv2ray 的入站监听所有 ip（"),v("code",[t._v("0.0.0.0")]),t._v("），在本机设置防火墙，只允许特定 ip 访问Qv2ray 的代理的端口。")])])])]),t._v(" "),v("p",[t._v("例子：若 ip 为 "),v("code",[t._v("192.168.0.100")]),t._v(" 的设备希望使用代理，本机的 ip 为 "),v("code",[t._v("192.168.0.50")]),t._v("。若本机的 Qv2ray 配置了一个端口为 "),v("code",[t._v("12345")]),t._v(" 的 http 入站，监听 ip"),v("code",[t._v("0.0.0.0")]),t._v(" 或 "),v("code",[t._v("192.168.0.100")]),t._v("，则在 "),v("code",[t._v("192.168.0.100")]),t._v(" 的设备上，可通过")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('export http_proxy="http://192.168.0.50:12345"\nexport https_proxy="http://192.168.0.50:12345"\n')])])]),v("p",[t._v("使用此 http 代理（其他使用方式也类似）。")]),t._v(" "),v("p",[t._v("注意事项：")]),t._v(" "),v("ul",[v("li",[t._v("为让其他设备使用本机的 Qv2ray 提供的代理，除了本机的 Qv2ray 的代理需要监听目标设备的ip之外，还需要让目标设备能通过本机ip及代理端口访问到本机。因此，若本机设置了防火墙，则需要让防火墙放行对应端口；局域网环境里，可能需要关闭“内网隔离”“AP 隔离”之类的设置，否则内网 ip 之间也无法互相访问。")]),t._v(" "),v("li",[t._v("如果本机没有设置防火墙，将 Qv2ray 的代理监听的 ip 设为 "),v("code",[t._v("0.0.0.0")]),t._v("，且局域网没有设置“内网隔离”，则意味着局域网里所有的设备都能通过本机的ip及代理端口使用本机的 Qv2ray 提供的代理；如果本机是处于公网ip环境里，则意味着整个互联网中所有设备都能通过本机的 ip 及代理端口使用本机的 Qv2ray 提供的代理。因此，如确需在非可信任的局域网环境或公网 ip 环境中开启此种配置，最好配合防火墙，或配合代理身份验证，以防止本机的代理被滥用。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);