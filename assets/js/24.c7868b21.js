(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{273:function(t,a,s){"use strict";s.r(a);var v=s(17),e=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"让你的软件走-qv2ray-提供的代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#让你的软件走-qv2ray-提供的代理"}},[t._v("#")]),t._v(" 让你的软件走 Qv2ray 提供的代理")]),t._v(" "),s("h2",{attrs:{id:"_1-系统代理模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-系统代理模式"}},[t._v("#")]),t._v(" 1 系统代理模式")]),t._v(" "),s("h3",{attrs:{id:"_1-1-linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-linux"}},[t._v("#")]),t._v(" 1.1 Linux")]),t._v(" "),s("h4",{attrs:{id:"_1-1-1-操作系统环境变量设置代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-操作系统环境变量设置代理"}},[t._v("#")]),t._v(" 1.1.1 操作系统环境变量设置代理")]),t._v(" "),s("p",[t._v("在 Linux 下，有（相当一部分）应用程序（如 curl, wget 等）会遵循形如“协议_proxy”的环境变量所设置的代理。例如：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("http_proxy")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:8000"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将地址和端口换成Qv2ray中配置的http入站对应的地址和端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("https_proxy")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:8000"')]),t._v("\n")])])]),s("p",[t._v("即可让这些程序使用 Qv2ray 的 http 入站代理。")]),t._v(" "),s("p",[t._v("如果 Qv2ray 的 http 入站代理启用了身份验证，则相应的环境变量应设为：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("http_proxy")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://user:pass@127.0.0.1:8000"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("https_proxy")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://user:pass@127.0.0.1:8000"')]),t._v("\n")])])]),s("p",[t._v("如果身份验证的用户和密码中有特殊字符，则需要对其进行转义，可参考下表：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("!")])]),t._v(" "),s("th",[s("code",[t._v("#")])]),t._v(" "),s("th",[s("code",[t._v("$")])]),t._v(" "),s("th",[s("code",[t._v("&")])]),t._v(" "),s("th",[s("code",[t._v("'")])]),t._v(" "),s("th",[s("code",[t._v("(")])]),t._v(" "),s("th",[s("code",[t._v(")")])]),t._v(" "),s("th",[s("code",[t._v("*")])]),t._v(" "),s("th",[s("code",[t._v("+")])]),t._v(" "),s("th",[s("code",[t._v(",")])]),t._v(" "),s("th",[s("code",[t._v("/")])]),t._v(" "),s("th",[s("code",[t._v(":")])]),t._v(" "),s("th",[s("code",[t._v(";")])]),t._v(" "),s("th",[s("code",[t._v("=")])]),t._v(" "),s("th",[s("code",[t._v("?")])]),t._v(" "),s("th",[s("code",[t._v("@")])]),t._v(" "),s("th",[s("code",[t._v("[")])]),t._v(" "),s("th",[s("code",[t._v("]")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("%21")])]),t._v(" "),s("td",[s("code",[t._v("%23")])]),t._v(" "),s("td",[s("code",[t._v("%24")])]),t._v(" "),s("td",[s("code",[t._v("%26")])]),t._v(" "),s("td",[s("code",[t._v("%27")])]),t._v(" "),s("td",[s("code",[t._v("%28")])]),t._v(" "),s("td",[s("code",[t._v("%29")])]),t._v(" "),s("td",[s("code",[t._v("%2A")])]),t._v(" "),s("td",[s("code",[t._v("%2B")])]),t._v(" "),s("td",[s("code",[t._v("%2C")])]),t._v(" "),s("td",[s("code",[t._v("%2F")])]),t._v(" "),s("td",[s("code",[t._v("%3A")])]),t._v(" "),s("td",[s("code",[t._v("%3B")])]),t._v(" "),s("td",[s("code",[t._v("%3D")])]),t._v(" "),s("td",[s("code",[t._v("%3F")])]),t._v(" "),s("td",[s("code",[t._v("%40")])]),t._v(" "),s("td",[s("code",[t._v("%5B")])]),t._v(" "),s("td",[s("code",[t._v("%5D")])])])])]),t._v(" "),s("p",[t._v("注：如果需要通过 "),s("code",[t._v("sudo")]),t._v(" 执行的程序也使用这些环境变量，需要让 "),s("code",[t._v("sudo")]),t._v(" 保留这些环境变量，在 "),s("code",[t._v("sudoers")]),t._v(" 配置文件中加上这一行即可：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('Defaults env_keep += "http_proxy https_proxy ftp_proxy"\n')])])]),s("p",[t._v("有些程序使用的是自己定义的环境变量，如 "),s("code",[t._v("rsync")]),t._v(" 需通过 "),s("code",[t._v("RSYNC_PROXY")]),t._v(" 环境变量来使用 http 代理：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("export RSYNC_PROXY=user:pass@127.0.0.1:8000\n")])])]),s("h4",{attrs:{id:"_1-1-2-桌面的系统设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-桌面的系统设置"}},[t._v("#")]),t._v(" 1.1.2 桌面的系统设置")]),t._v(" "),s("p",[t._v("目前 Qv2ray 已经支持自动设置 GNOME 系统设置与 KDE 系统设置里的系统代理。有些应用（如 Firefox 和 Chromium）会读取并遵循系统设置里的代理配置。对这些应用而言，只需要在 Qv2ray 里启用系统代理即可。")]),t._v(" "),s("p",[t._v("未能被 Qv2ray 支持的桌面可以在对应桌面的代理设置里面手动指定代理服务器到 Qv2ray 的 HTTP 入站与 Socks5 入站。")]),t._v(" "),s("h4",{attrs:{id:"_1-1-3-proxychains"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-proxychains"}},[t._v("#")]),t._v(" 1.1.3 ProxyChains")]),t._v(" "),s("p",[t._v("对于前两种方式无法生效的应用，可尝试使用 proxychains 进行代理，它通过劫持动态链接库 "),s("code",[t._v("libc")]),t._v(" 中的 "),s("code",[t._v("connect")]),t._v(" 等函数实现重定向网络链接到代理中。")]),t._v(" "),s("p",[t._v("首先安装 "),s("code",[t._v("proxychains-ng")]),t._v("：https://github.com/rofl0r/proxychains-ng")]),t._v(" "),s("p",[t._v("随后，编辑 "),s("code",[t._v("/etc/proxychains.conf")]),t._v("（全局）或"),s("code",[t._v("$HOME/.proxychains/proxychains.conf")]),t._v("（用户），将 "),s("code",[t._v("[ProxyList]")]),t._v(" 里的代理改成 Qv2ray 的 socks 或 http 入站代理，如：")]),t._v(" "),s("div",{staticClass:"language-conf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[ProxyList]\nsocks5  127.0.0.1 1088\n#or\n#http  127.0.0.1 8000\n")])])]),s("p",[t._v("在终端里使用 "),s("code",[t._v("proxychains <program>")]),t._v(" 即可让 "),s("code",[t._v("proxychains")]),t._v(" 劫持该应用，以试图让该应用使用代理。")]),t._v(" "),s("p",[t._v("由于 proxychains 的原理是劫持动态链接库 "),s("code",[t._v("libc")]),t._v("，因此它对静态链接的应用（如 "),s("code",[t._v("golang")]),t._v(" 编译的应用）是无效的。")]),t._v(" "),s("h4",{attrs:{id:"_1-1-4-透明代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-透明代理"}},[t._v("#")]),t._v(" 1.1.4 透明代理")]),t._v(" "),s("p",[t._v("这个方法能使得系统上全部应用都走代理，但是具有一定的危险性。具体请参阅 V2Ray 的"),s("a",{attrs:{href:"https://guide.v2fly.org/app/transparent_proxy.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("白话文教程 - 透明代理"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_1-2-microsoft-windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-microsoft-windows"}},[t._v("#")]),t._v(" 1.2 Microsoft Windows")]),t._v(" "),s("p",[t._v("一般情况下，Qv2ray 能够自己完成 Windows 下的代理设置，即在连接一个节点后，右击通知区的 Qv2ray 图标，选择"),s("code",[t._v("系统代理")]),t._v("即可设置。如果这样设置无效，那么也可以手动指定代理：")]),t._v(" "),s("p",[s("strong",[t._v("方法一")]),t._v("：打开"),s("code",[t._v("控制面板\\网络和 Internet")]),t._v("，点击 "),s("code",[t._v("Internet 选项")]),t._v("，在"),s("code",[t._v("连接")]),t._v("标签下选择"),s("code",[t._v("局域网设置")]),t._v("，勾选"),s("code",[t._v("为 LAN 使用代理服务器(这些设置不适用于拨号或 VPN 连接)")]),t._v("，然后填写 Qv2ray 的 HTTP 入站信息即可。")]),t._v(" "),s("p",[s("strong",[t._v("方法二")]),t._v("：打开"),s("code",[t._v("设置")]),t._v("，转到"),s("code",[t._v("网络和 Internet")]),t._v(",再转到"),s("code",[t._v("代理")]),t._v("，然后填写 Qv2ray 的 HTTP 入站信息即可。")]),t._v(" "),s("h3",{attrs:{id:"_1-3-macos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-macos"}},[t._v("#")]),t._v(" 1.3 macOS")]),t._v(" "),s("p",[t._v("一般情况下，Qv2ray 能够自己完成 macOS 下的代理设置，即在连接一个节点后，右击顶栏上的 Qv2ray 图标，选择"),s("code",[t._v("系统代理")]),t._v("即可设置。如果这样设置无效，那么也可以在系统设置连手动指定代理。")]),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v("：在 macOS 下，代理设置完成之后需要重启你的浏览器或者其它应用，你的浏览器或者应用才会使用新的系统代理设置。你需要右击程序坞上的程序图标，选择"),s("code",[t._v("退出")]),t._v("来彻底关闭一个程序。")]),t._v(" "),s("h2",{attrs:{id:"_2-手动指定应用代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-手动指定应用代理"}},[t._v("#")]),t._v(" 2 手动指定应用代理")]),t._v(" "),s("h3",{attrs:{id:"_2-1-linux、windows-与-macos-下的命令行程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-linux、windows-与-macos-下的命令行程序"}},[t._v("#")]),t._v(" 2.1 Linux、Windows 与 macOS 下的命令行程序")]),t._v(" "),s("p",[t._v("有些应用支持手动设置代理，凡是软件设置里有提供 http 代理设置的应用，如无意外都可以配置使用 Qv2ray 的 http 入站代理。")]),t._v(" "),s("p",[t._v("对 "),s("code",[t._v("java")]),t._v(" 应用，可以通过 java 配置项设置代理，如：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("java -Dhttp.proxyHost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 -Dhttp.proxyPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v(" -Dhttps.proxyHost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 -Dhttps.proxyPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v(" javacommand\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#or")]),t._v("\njava -DsocksProxyHost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 -DsocksProxyPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1088")]),t._v(" javacommand\n")])])]),s("p",[t._v("对 "),s("code",[t._v("ssh")]),t._v(" 或 "),s("code",[t._v("scp")]),t._v("，可通过 "),s("code",[t._v("socat")]),t._v(" 设置代理，如：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" -o "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ProxyCommand=socat - PROXY:localhost:%h:%p,proxyport=8000"')]),t._v(" user@remotehost\n")])])]),s("p",[t._v("对 "),s("code",[t._v("electron")]),t._v(" 系应用(如 Chrome, Simplenote, Notion 等)，可通过"),s("code",[t._v("--args")]),t._v(" 设置代理，如：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("simplenote --args --proxy-server"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:1081\n")])])]),s("p",[t._v("对 "),s("code",[t._v("git")]),t._v("，可通过 "),s("code",[t._v("config http.proxy")]),t._v(" 设置代理，如：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.proxy http://127.0.0.1:1081\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global https.proxy http://127.0.0.1:1081\n")])])]),s("p",[t._v("（Linux Only）对 "),s("code",[t._v("snap")]),t._v("，可通过 "),s("code",[t._v("set system proxy.http")]),t._v(" 设置代理，如：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" snap "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" system proxy.http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:1081"')]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" snap "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" system proxy.https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:1081"')]),t._v(" \n")])])]),s("h3",{attrs:{id:"_2-2-浏览器自身的代理设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-浏览器自身的代理设置"}},[t._v("#")]),t._v(" 2.2 浏览器自身的代理设置")]),t._v(" "),s("h4",{attrs:{id:"_2-2-1-firefox-及其衍生浏览器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-firefox-及其衍生浏览器"}},[t._v("#")]),t._v(" 2.2.1 Firefox 及其衍生浏览器")]),t._v(" "),s("p",[t._v("Firefox 自身提供了代理设置。在 Firefox 的"),s("code",[t._v("选项")]),t._v("或者"),s("code",[t._v("首选项")]),t._v("里面打开"),s("code",[t._v("网络设置")]),t._v("，选择"),s("code",[t._v("手动代理配置(M)")]),t._v("，然后设置 Socks5 代理到 Qv2ray 的入站即可。同时，我们建议勾选"),s("code",[t._v("使用 SOCKS v5 时代理 DNS 查询")]),t._v("，这会解决一些 DNS 查询故障。")]),t._v(" "),s("h4",{attrs:{id:"_2-2-2-google-chrome、新-microsoft-edge、brave-与其它基于-chromium-的浏览器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-google-chrome、新-microsoft-edge、brave-与其它基于-chromium-的浏览器"}},[t._v("#")]),t._v(" 2.2.2 Google Chrome、新 Microsoft Edge、Brave 与其它基于 Chromium 的浏览器")]),t._v(" "),s("ol",[s("li",[t._v("开启系统代理，从 Chrome 扩展商店或者 "),s("a",{attrs:{href:"https://github.com/FelisCatus/SwitchyOmega/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub 项目 Releases"),s("OutboundLink")],1),t._v("下载 SwitchyOmega 然后安装。")]),t._v(" "),s("li",[t._v("在 SwitchyOmega 的设置页里面添加新的情景模式，情景模式的类型为代理服务器，名称可以是 Qv2ray，然后设置 Socks5 代理到 Qv2ray 的入站即可。")]),t._v(" "),s("li",[t._v("点击浏览器上的 SwitchyOmega 按钮，选择 Qv2ray 即可。")])]),t._v(" "),s("h2",{attrs:{id:"_3-更多玩法：让网络上的其他设备使用代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-更多玩法：让网络上的其他设备使用代理"}},[t._v("#")]),t._v(" 3 更多玩法：让网络上的其他设备使用代理")]),t._v(" "),s("p",[t._v("默认情况下，Qv2ray 的代理配置是只监听 "),s("code",[t._v("127.0.0.1")]),t._v(" 的地址，即其代理只有本机能够使用，如需让网络上的其他设备使用代理，需要修改这一配置：")]),t._v(" "),s("ul",[s("li",[t._v("若希望局域网（内网 ip 环境）或互联网（公网 ip 环境）中的所有设备都能够使用本机的 Qv2ray 提供的代理，则在“首选项-入站设置-监听地址”里，把默认的 "),s("code",[t._v("127.0.0.1")]),t._v(" 改成 "),s("code",[t._v("0.0.0.0")]),t._v(" 即可。")]),t._v(" "),s("li",[t._v("若希望几个具有特定 ip 的设备能够使用本机的 Qv2ray 提供的代理，由于 V2Ray 的限制，同一个入站不支持监听多个指定的 ip，可以有两种方式解决这个问题：\n"),s("ul",[s("li",[t._v("通过复杂配置，建立多个不同的入站来实现，每个入站分别监听其中的一个 ip。")]),t._v(" "),s("li",[t._v("Qv2ray 的入站监听所有 ip（"),s("code",[t._v("0.0.0.0")]),t._v("），在本机设置防火墙，只允许特定 ip 访问 Qv2ray 的代理的端口。")])])])]),t._v(" "),s("p",[t._v("例子：若 ip 为 "),s("code",[t._v("192.168.0.100")]),t._v(" 的设备希望使用代理，本机的 ip 为 "),s("code",[t._v("192.168.0.50")]),t._v("。若本机的 Qv2ray 配置了一个端口为 "),s("code",[t._v("12345")]),t._v(" 的 http 入站，监听  ip"),s("code",[t._v("0.0.0.0")]),t._v(" 或 "),s("code",[t._v("192.168.0.100")]),t._v("，则在 "),s("code",[t._v("192.168.0.100")]),t._v(" 的设备上，可通过")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('export http_proxy="http://192.168.0.50:12345"\nexport https_proxy="http://192.168.0.50:12345"\n')])])]),s("p",[t._v("使用此 http 代理（其他使用方式也类似）。")]),t._v(" "),s("p",[t._v("操作系统与应用程序亦可使用这样的代理，设置好正确的 IP 、端口与协议即可。")]),t._v(" "),s("p",[s("strong",[t._v("注意事项")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("为让其他设备使用本机的 Qv2ray 提供的代理，除了本机的 Qv2ray 的代理需要监听目标设备的 ip 之外，还需要让目标设备能通过本机 ip 及代理端口访问到本机。因此，若本机设置了防火墙，则需要让防火墙放行对应端口；局域网环境里，可能需要关闭「内网隔离」、「AP 隔离」之类的设置，否则内网 ip 之间也无法互相访问。")]),t._v(" "),s("li",[t._v("如果本机没有设置防火墙，将 Qv2ray 的代理监听的 ip 设为 "),s("code",[t._v("0.0.0.0")]),t._v("，且局域网没有设置“内网隔离”，则意味着局域网里所有的设备都能通过本机的 ip 及代理端口使用本机的 Qv2ray 提供的代理；如果本机是处于公网 ip 环境里，则意味着整个互联网中所有设备都能通过本机的 ip 及代理端口使用本机的 Qv2ray 提供的代理。因此，如确需在非可信任的局域网环境或公网 ip 环境中开启此种配置，最好配合防火墙，或配合代理身份验证，以防止本机的代理被滥用。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);